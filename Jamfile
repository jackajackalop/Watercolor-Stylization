
#---- setup ----
#This portion of the Jamfile sets up compiler and linker flags per-OS.
#You shouldn't need to change it.

if $(OS) = NT { #Windows
	C++FLAGS = /nologo /Z7 /c /EHsc /W3 /WX /MD /I"kit-libs-win/out/include" /I"kit-libs-win/out/include/SDL2" /I"kit-libs-win/out/libpng"
		#disable a few warnings:
		/wd4146 #-1U is still unsigned
		/wd4297 #unforunately SDLmain is nothrow
	;
	LINKFLAGS = /nologo /SUBSYSTEM:CONSOLE /DEBUG:FASTLINK
		/LIBPATH:"kit-libs-win/out/lib"
		/LIBPATH:"kit-libs-win/out/libpng"
		/LIBPATH:"kit-libs-win/out/zlib"
	;
	LINKLIBS = SDL2main.lib SDL2.lib OpenGL32.lib libpng.lib zlib.lib ;

	File dist\\SDL2.dll : kit-libs-win\\out\\dist\\SDL2.dll ;
} else if $(OS) = MACOSX { #MacOS
	KIT_LIBS = kit-libs-osx ;
	C++ = clang++ ;
	C++FLAGS =
		-std=c++14 -g -Wall -Werror
		-I$(KIT_LIBS)/libpng/include                           #libpng
		-I$(KIT_LIBS)/glm/include                              #glm
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --cflags` #SDL2
		;
	LINK = clang++ ;
	LINKFLAGS = -std=c++14 -g -Wall -Werror -DTWEAK_ENABLE ;
	LINKLIBS =
		-L$(KIT_LIBS)/libpng/lib -lpng                      #libpng
		-L$(KIT_LIBS)/zlib/lib -lz                          #zlib
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --static-libs` -framework OpenGL #SDL2
		;
} else if $(OS) = LINUX { #Linux
	KIT_LIBS = kit-libs-linux ;
	C++ = g++ ;
	C++FLAGS =
		-std=c++14 -g -Wall -Werror -DTWEAK_ENABLE
		-I$(KIT_LIBS)/libpng/include                           #libpng
		-I$(KIT_LIBS)/glm/include                              #glm
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --cflags` #SDL2
		;
	LINK = g++ ;
	LINKFLAGS = -std=c++14 -g -Wall -Werror -DTWEAK_ENABLE ;
	LINKLIBS =
		-L$(KIT_LIBS)/libpng/lib -lpng                      #libpng
		-L$(KIT_LIBS)/zlib/lib -lz                          #zlib
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --static-libs` -lGL #SDL2
		;
}

#---- build ----
#This is the part of the file that tells Jam how to build your project.

#Store the names of all the .cpp files to build into a variable:
SERVER_NAMES =
	server
	;

COMMON_NAMES =
#	Connection
#	Game
	;

CLIENT_NAMES =
    parameters
	load_save_png
	main
	data_path
	compile_program
	vertex_color_program
	scene_program
	depth_program
    mrt_blur_program
    surface_program
    stylize_program
    http-tweak/tweak
	Scene
	Mode
	GameMode
	MenuMode
	Load
	MeshBuffer
	draw_text
	Sound
	;

if $(OS) = NT {
	#On windows, an additional 'gl_shims' file is needed:
	CLIENT_NAMES += gl_shims ;
}

LOCATE_TARGET = objs ; #put objects in 'objs' directory
Objects $(CLIENT_NAMES:S=.cpp) ;
#Objects $(SERVER_NAMES:S=.cpp) ;
Objects $(COMMON_NAMES:S=.cpp) ;

LOCATE_TARGET = dist ; #put main in 'dist' directory
MainFromObjects main : $(CLIENT_NAMES:S=$(SUFOBJ)) $(COMMON_NAMES:S=$(SUFOBJ)) ;
#MainFromObjects server : $(SERVER_NAMES:S=$(SUFOBJ)) $(COMMON_NAMES:S=$(SUFOBJ)) ;
